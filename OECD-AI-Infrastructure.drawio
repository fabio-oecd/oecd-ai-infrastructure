<mxfile host="app.diagrams.net" modified="2024-04-18T13:13:50.559Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36" etag="ivQ52srYe18EyL2xGapU" version="24.2.5" type="github">
  <diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">
    <mxGraphModel dx="1434" dy="772" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-1" parent="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="ZLdICrvh6a32DMpb2cqf-0" value="&lt;b&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Static Pipelines&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="132.5" y="80" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-2" value="&lt;b&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Live Pipelines&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="450" y="80" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-4" value="Hugging Face" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="130" width="80" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-5" value="Google Trends" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="110" y="130" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-6" value="Stack Overflow Survey" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="220" y="130" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-7" value="SEC EDGAR" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="130" y="170" width="80" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-8" value="Paperswithcode (Catalogue)" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="170" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-9" value="GitHub (Catalogue)" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="240" y="170" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-10" value="Adzuna" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="210" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-11" value="Elsevier" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="90" y="210" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-12" value="Preqin" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="160" y="210" width="50" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-13" value="Catalogue API" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="220" y="210" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-14" value="Incidents Monitor API" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="404" y="140" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-15" value="Incidents Data Retrieval" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="120" y="250" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-16" value="AIR" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="490" y="140" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-20" value="&lt;b&gt;Data Management&lt;/b&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;- &lt;u&gt;Cloud Run&lt;/u&gt;:&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;Databases can be deployed as Cloud Run containers (&lt;/span&gt;&lt;a style=&quot;background-color: initial;&quot; href=&quot;https://hub.docker.com/_/postgres&quot;&gt;https://hub.docker.com/_/postgres&lt;/a&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;). Here, we have a local running database that can be pointed at any time, you just specify the port number in your code. Cloud Run also has logs and metrics to monitor the databases.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- &lt;u&gt;Google Cloud Storage&lt;/u&gt;: can be used to store &lt;b&gt;data backups&lt;/b&gt;. These backups can be run weekly, for instance, for all datasets. Suggestion: create one VM to run backup for all datasets.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- &lt;u&gt;BigQuery&lt;/u&gt;: can be used to store the &lt;b&gt;outputs &lt;/b&gt;of each pipeline, and is also useful for local testings if other users want to query specific data from BigQuery tables.&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="470" width="295" height="250" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-21" value="&lt;b&gt;Configuration&lt;/b&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;u&gt;config.yaml&lt;/u&gt;: it is good practice to have a YAML-formatted config file inside of each project, where it stores all parameters, paths and other pipeline-specific elements. Do &lt;b&gt;NOT &lt;/b&gt;store secrets in this file, or any access-specific passwords.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;u&gt;requirements.txt&lt;/u&gt;: make sure this file containts the result of pip freeze &amp;gt; requirements.txt which will contain the specific versions that need to be installed to run the pipeline correctly. Specifying a general name such as &quot;tensorflow&quot; can be problematic as versions differ significantly. Optionally, you can use Poetry or other package managers.&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="1230" width="630" height="150" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-23" value="&lt;b&gt;Frequency of run&lt;/b&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Instance schedules are created to run each VM with one of the following frequencies: w&lt;span style=&quot;background-color: initial;&quot;&gt;eekly, m&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;onthly.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="380" width="295" height="80" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-24" value="&lt;div&gt;&lt;b&gt;Secrets and Passwords&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Secret Manager: all sensitive data must be stored as separate secrets in GCP. In your code, make sure to point at the correct versions of your secrets.&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="1394" width="630" height="80" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-25" value="&lt;div&gt;&lt;b&gt;Code best practices&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Before git pushing your Python code, make sure to:&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;isort .&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;black .&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;flake8 .&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Also, make sure to document &lt;b&gt;ONLY &lt;/b&gt;the necessary parts of the code, and do not document the obvious. This will help maintain a clean and light code.&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="1492" width="630" height="158" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-27" value="&lt;b&gt;Run file&lt;/b&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Create a &lt;b&gt;run.sh&lt;/b&gt; for each pipeline, and make sure to follow the following template. This cleans the cache at every start and saves the logs locally.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;#!/bin/bash&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;&lt;br&gt;&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;set -e&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;&lt;br&gt;&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;output_file=&quot;run.log&quot;&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;rm -f &quot;$output_file&quot;&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;exec &amp;gt; &amp;gt;(tee -a &quot;$output_file&quot;) 2&amp;gt;&amp;amp;1&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;&lt;br&gt;&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;rm -rf .cache&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;&lt;br&gt;&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;sudo apt update&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;sudo apt install python3-pip&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;sudo apt install virtualenv&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;sudo apt-get clean&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;sudo apt-get autoclean&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;&lt;br&gt;&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;sudo rm -rf venv&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;virtualenv venv&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;source venv/bin/activate&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;&lt;br&gt;&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;pip install -r requirements.txt&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;&lt;br&gt;&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;#RUN YOUR PYTHON FILES HERE&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;&lt;br&gt;&lt;/i&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;i&gt;deactivate&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="739" width="300" height="471" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-31" value="&lt;b&gt;Environment&lt;/b&gt;: Google Cloud" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="310" width="620" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-32" value="&lt;b&gt;Frequency of run&lt;/b&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;div style=&quot;text-align: left;&quot;&gt;These pipelines are running non-stop as Kubernetes pods.&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Benefit of using Kubernetes: you can monitor your pods, back-up databases and avoid system crash as pods are always replicated.&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="332.5" y="380" width="307.5" height="140" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-33" value="&lt;b&gt;Data Management&lt;/b&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;- &lt;u&gt;Kubernetes StatefulSets&lt;/u&gt;: You can easily create a pod for your database using Helm, a package manager for Kubernetes. Example on how to create a MongoDB pod in Kubernetes (https://artifacthub.io/packages/helm/bitnami/mongodb&lt;span style=&quot;background-color: initial;&quot;&gt;). Here, you can specify the number of replicas, which will be duplicates of the database. In case your system crashes, there will always be a back-up database waiting to be activated.&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="332.5" y="530" width="307.5" height="190" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-34" value="&lt;div&gt;&lt;b&gt;DockerFile&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Each project can have their own DockerFile, which can be hosted in an OECD.AI´s Docker Hub repository. In this DockerFile, make sure to specify what needs to be run, for instance the Angular front-end for AIR. Currently, we already have a Docker container running for the Incidents Monitor API. The idea is to have this container running as a Kubernetes Pod, not on Cloud Run.&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="332.5" y="739" width="307.5" height="181" as="geometry" />
        </mxCell>
        <mxCell id="ZLdICrvh6a32DMpb2cqf-35" value="&lt;div&gt;&lt;b&gt;CI/CD&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Make sure to &lt;b&gt;ALWAYS &lt;/b&gt;work in a developer branch of your repository, and &lt;b&gt;NEVER &lt;/b&gt;on the main branch.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;The flow must be always pushing from developer branch to main, with someone else reviewing the merge request.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;How to run CI/CD? An easy way is through GitHub actions. You just have to add a .workflow folder to your repository and create the different YAML files that will perform as actions.&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="1660" width="630" height="140" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
